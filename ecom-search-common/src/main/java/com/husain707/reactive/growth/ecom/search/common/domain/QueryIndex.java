package com.husain707.reactive.growth.ecom.search.common.domain;

import org.springframework.data.annotation.Id;
import org.springframework.data.elasticsearch.annotations.Document;
import org.springframework.data.elasticsearch.annotations.CompletionField;
import org.springframework.data.elasticsearch.annotations.Field;
import org.springframework.data.elasticsearch.annotations.FieldType;
import org.springframework.data.elasticsearch.core.suggest.Completion;

import java.time.Instant;
import java.util.List;

@Document(indexName = "gec_query")
public class QueryIndex {

    @Id
    private String id;

    @CompletionField
    @Field(name = "query_text")
    private Completion queryText;

    @Field(name = "normalized_query", type = FieldType.Keyword)
    private String normalizedQuery;

    @Field(type = FieldType.Object)
    private QueryFilters filters;

    @Field(name = "search_count", type = FieldType.Long)
    private Long searchCount;

    @Field(name = "last_searched_at", type = FieldType.Date)
    private Instant lastSearchedAt;

    @Field(name = "is_auto_generated", type = FieldType.Boolean)
    private Boolean isAutoGenerated;

    @Field(name = "suggest_weight", type = FieldType.Integer)
    private Integer suggestWeight;

    public static class QueryFilters {

        @Field(name = "categories", type = FieldType.Keyword)
        private List<String> categories;

        @Field(type = FieldType.Keyword)
        private String brand;

        @Field(type = FieldType.Object)
        private PriceFilter price;

        @Field(type = FieldType.Nested)
        private List<AttributeFilter> attributes;

        public List<String> getCategories() {
            return categories;
        }

        public void setCategories(List<String> categories) {
            this.categories = categories;
        }

        public String getBrand() {
            return brand;
        }

        public void setBrand(String brand) {
            this.brand = brand;
        }

        public PriceFilter getPrice() {
            return price;
        }

        public void setPrice(PriceFilter price) {
            this.price = price;
        }

        public List<AttributeFilter> getAttributes() {
            return attributes;
        }

        public void setAttributes(List<AttributeFilter> attributes) {
            this.attributes = attributes;
        }
    }

    public static class PriceFilter {

        @Field(type = FieldType.Double)
        private Double min;

        @Field(type = FieldType.Double)
        private Double max;

        public Double getMin() {
            return min;
        }

        public void setMin(Double min) {
            this.min = min;
        }

        public Double getMax() {
            return max;
        }

        public void setMax(Double max) {
            this.max = max;
        }
    }

    public static class AttributeFilter {

        @Field(type = FieldType.Keyword)
        private String key;

        @Field(type = FieldType.Keyword)
        private String value;

        public String getKey() {
            return key;
        }

        public void setKey(String key) {
            this.key = key;
        }

        public String getValue() {
            return value;
        }

        public void setValue(String value) {
            this.value = value;
        }
    }

    // Getters and Setters
    public String getId() { return id; }
    public void setId(String id) { this.id = id; }
    public Completion getQueryText() { return queryText; }
    public void setQueryText(Completion queryText) { this.queryText = queryText; }
    public String getNormalizedQuery() { return normalizedQuery; }
    public void setNormalizedQuery(String normalizedQuery) { this.normalizedQuery = normalizedQuery; }
    public QueryFilters getFilters() { return filters; }
    public void setFilters(QueryFilters filters) { this.filters = filters; }
    public Long getSearchCount() { return searchCount; }
    public void setSearchCount(Long searchCount) { this.searchCount = searchCount; }
    public Instant getLastSearchedAt() { return lastSearchedAt; }
    public void setLastSearchedAt(Instant lastSearchedAt) { this.lastSearchedAt = lastSearchedAt; }
    public Boolean getAutoGenerated() { return isAutoGenerated; }
    public void setAutoGenerated(Boolean autoGenerated) { isAutoGenerated = autoGenerated; }
    public Integer getSuggestWeight() { return suggestWeight; }
    public void setSuggestWeight(Integer suggestWeight) { this.suggestWeight = suggestWeight; }
}